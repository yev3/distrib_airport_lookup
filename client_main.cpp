/*
 * This is sample code generated by rpcgen.
 * These are only templates and you can use them
 * as a guideline for developing your own functions.
 */

#include "places-airports.h"
#include <iostream>
#include <iomanip>

std::ostream & operator<<(std::ostream & strm, const location & loc) {
  return strm << "{" << std::fixed << std::setprecision(3)
         << loc.latitude << ", " << loc.longitude << "}";
}

std::ostream& operator<<(std::ostream & strm, const place & place) {
  return strm << place.name << ", " << place.state << " " << place.loc;
}

std::ostream& operator<<(std::ostream & strm, const airport & airp) {
  strm << airp.code;
  strm << " " << std::setw(24) << std::left << airp.name;
  strm << std::setw(0) << " " << airp.state;
  strm << " " << std::fixed << std::setprecision(1) << airp.dist;
  strm << " " << airp.loc;
  return strm;
}

void
places_prog_1(char *host, places_req *req)
{
	CLIENT *clnt;
	places_ret  *placesResult;

  std::cout << "Creating a connection..";

#ifndef	DEBUG
	clnt = clnt_create (host, PLACES_PROG, PLACES_VERS, "udp");
	if (clnt == NULL) {
		clnt_pcreateerror (host);
		exit (1);
	}
#endif	/* DEBUG */


  std::cout << "done." << std::endl;;

  std::cout << "Querying: " << req->places_req_u.named.name 
    << ", " << req->places_req_u.named.state << std::endl;


	placesResult = places_qry_1(req, clnt);
	if (placesResult == (places_ret *) NULL) {
		clnt_perror (clnt, "call failed");
	} else {
    std::cout << "Result: " << std::endl;
    std::cout << "Err: " << placesResult->err << std::endl;
    if (placesResult->err) {
      std::cout << "Error occured: " << placesResult->places_ret_u.error_msg << std::endl;
    } else {
      place_airports &resp = placesResult->places_ret_u.results;
      std::cout << resp.request << std::endl;
      airport * airp = resp.results;
      for (int i = 0; i < NRESULTS; ++i) {
        std::cout << i + 1 << ". " << airp[i] << std::endl;
      }
    }
	}

#ifndef	DEBUG
	clnt_destroy (clnt);
#endif	 /* DEBUG */
}



int main (int argc, char *argv[])
{
	if (argc < 4) {
		printf ("usage: %s places_host city_name state_name\n", argv[0]);
		exit (1);
	}
	char *host = argv[1];
	char *city = argv[2];
	char *state = argv[3];

  // Sample test data
  places_req req;
  req.req_type = REQ_NAMED;
  req.places_req_u.named.name = city;
  req.places_req_u.named.state = state;

	places_prog_1 (host, &req);
}
